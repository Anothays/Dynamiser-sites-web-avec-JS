/*
! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.absolute {
  position: absolute;
}

.m-5 {
  margin: 1.25rem;
}

.m-3 {
  margin: 0.75rem;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.h-full {
  height: 100%;
}

.h-10 {
  height: 2.5rem;
}

.w-full {
  width: 100%;
}

.w-1\/2 {
  width: 50%;
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.resize {
  resize: both;
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.justify-end {
  justify-content: flex-end;
}

.rounded {
  border-radius: 0.25rem;
}

.bg-gradient-to-r {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}

.from-violet-300 {
  --tw-gradient-from: #c4b5fd;
  --tw-gradient-to: rgb(196 181 253 / 0);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-green-200 {
  --tw-gradient-from: #bbf7d0;
  --tw-gradient-to: rgb(187 247 208 / 0);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.to-fuchsia-300 {
  --tw-gradient-to: #f0abfc;
}

.to-emerald-300 {
  --tw-gradient-to: #6ee7b7;
}

.p-3 {
  padding: 0.75rem;
}

.px-12 {
  padding-left: 3rem;
  padding-right: 3rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

@font-face {
  font-family: "Lato-Thin";

  src: url("./fonts/Lato/Lato-Thin.ttf");
}

@font-face {
  font-family: "Lato-Light";

  src: url("./fonts/Lato/Lato-Light.ttf");
}

@font-face {
  font-family: "Lato-Bold";

  src: url("./fonts/Lato/Lato-Bold.ttf");
}

/* GENERAL */

:root {
  --tw-gradient-stops: var(pink,purple);
}

.custom-font {
  font-family: "Lato-Thin";
  font-size: 3rem;
  line-height: 1;
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity))
}

.player-ui {
  display: none;
  height: 100%;
  width: 100%;
  flex-direction: column;
  align-items: center;
}

.current-container {
  margin-top: 1.25rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  font-family: "Lato-Thin";
  font-size: 3rem;
  line-height: 1;
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

.score-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-family: "Lato-Thin";
  font-size: 3rem;
  line-height: 1;
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

.hold-container {
  display: flex;
  height: 100%;
  width: 50%;
  flex-direction: column;
  align-items: center;
  justify-content: flex-end;
  border-radius: 0.25rem;
}

.player-name {
  margin-bottom: 1.25rem;
  height: 3.5rem;
  font-size: 4.5rem;
  line-height: 1;
}

.player-score {
  font-family: "Lato-Bold";
  margin-top: 0.5rem;
  --tw-scale-x: 1.5;
  --tw-scale-y: 1.5;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  font-size: 8rem;
  line-height: 1;
  opacity: 0.3
}

.currentScore {
  font-family: "Lato-Bold";
  margin: 0.5rem;
  font-size: 3.75rem;
  line-height: 1;
  opacity: 0.3
}

/* MENU NAVIGATION */

.header {
  box-shadow: 1px 0px 15px  grey;
  transform: translateX(-200%);
  position: absolute;
  z-index: 50;
  height: 100%;
  width: 8rem;
  align-items: center;
  justify-content: center;
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));
  --tw-gradient-from: #f4f4f5;
  --tw-gradient-to: rgb(244 244 245 / 0);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
  --tw-gradient-to: #e4e4e7;
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms
}

.navigation {
  display: flex;
  height: 100%;
  width: 100%;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  padding-top: 2.5rem;
}

.navigation li {
  margin: 0.75rem;
  padding: 0.5rem;
}

.navigation a:hover {
  cursor: pointer;
  --tw-text-opacity: 1;
  color: rgb(96 165 250 / var(--tw-text-opacity));
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.menu-icon {
  display: block;
  position: fixed;
  left: 10px;
  top: 12px;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  z-index: 100;
  background: #333;
  transition: all .2s ease-out;
  width: 18px;
  height: 2px;
}

.menu-icon:before,
.menu-icon:after {
  background: #333;
  content: '';
  display: block;
  height: 100%;
  position: absolute;
  transition: all .2s ease-out;
  width: 100%;
}

.menu-icon:before {
  top: 5px;
}

.menu-icon:after {
  top: -5px;
}

.menu-btn:checked ~ .menu-icon {
  background: transparent;
}

.menu-btn:checked ~ .menu-icon:before {
  transform: rotate(-45deg);
  top: 0;
}

.menu-btn:checked ~ .menu-icon:after {
  transform: rotate(45deg);
  top: 0;
}

.menu-btn:checked ~ .header {
  transform: translateX(0)
}

.menu-btn {
  display: none;
}

/* BUTTONS */

/* .btn-container {
    @apply flex 
} */

.btn {
  border-radius: 0.25rem;
  border-width: 2px;
  background-color: transparent;
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  transition: 0.3s;
  font-family: "Lato-Thin";
}

.btn:hover {
  --tw-border-opacity: 1;
  border-color: rgb(96 165 250 / var(--tw-border-opacity));
}

.cube-container {
  top: 50%;
  left: 50%;
  z-index: 40;
  transform: translateX(-50%) translateY(-50%);
  position: fixed;
  perspective: 1000px;
  margin: 0px auto 100px;
  transition: 1s;
  animation: tinyBounce 2s infinite alternate linear;
  height: 8rem;
  width: 8rem
}

/* CUBE */

.cube {
  position: relative;
  transform-style: preserve-3d;
  /* transform: rotateY(-90deg) rotateZ(0deg) rotateX(00deg); */
  /* transition: 0.3s; */
  animation: spin 15s infinite linear;
  height: 100%;
  width: 100%;
  font-family: "Lato-Thin";
  font-size: 3rem;
  line-height: 1;
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

.cube:hover {
  cursor: pointer;
}

.cube-side {
  position: absolute;
  display: flex;
  height: 100%;
  width: 100%;
  align-items: center;
  justify-content: center;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(107 114 128 / var(--tw-border-opacity));
  background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));
  --tw-gradient-from: #f4f4f5;
  --tw-gradient-to: rgb(244 244 245 / 0);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
  --tw-gradient-to: #94a3b8;
  font-size: 4.5rem;
  line-height: 1;
}

.top {
  transform: rotateX(90deg) translateZ(4rem)
}

.bot {
  transform: rotateX(-90deg) translateZ(4rem)
}

.left {
  transform: rotateY(-90deg) translateZ(4rem)
}

.right {
  transform: rotateY(90deg) translateZ(4rem)
}

.back {
  transform: rotateX(-180deg) translateZ(4rem)
}

.front {
  transform: translateZ(4rem)
}

/* CUBE keyframes */

@keyframes tinyBounce {
  from {
    transform:translateX(-50%) translateY(-50%);
  }

  50% {
    transform:translateX(-50%) translateY(-35%);
  }

  to {
    transform:translateX(-50%) translateY(-50%);
  }
}

@keyframes spin {
  from {
    transform: rotateY(0deg) rotateZ(0deg) rotateX(0deg);
  }

  50%{
    transform: rotateY(180deg) rotateZ(180deg) rotateX(180deg);
  }

  to {
    transform: rotateX(360deg) rotateY(360deg) rotateX(0deg);
  }
}

/* 
1 Y0 Z0 X180
2 Y0 Z0 X90
3 Y90 Z0 X0
4 Y0 Z0 X-90
5 Y-90 Z0 X0
6 Y0 Z0 X0 
*/

@keyframes bounce-1 {
  from {
    transform: rotateY(0deg) rotateZ(0deg) rotateX(0deg);
  }

  15% {
    transform: rotateY(360deg) translateY(-69rem) rotateZ(360deg) rotateX(180deg);
  }

  30% {
    transform: translateY(-30rem) rotateY(180deg) rotateZ(180deg) rotateX(270deg);
  }

  50% {
    transform: translateY(0rem) rotateY(0deg) rotateZ(0deg) rotateX(180deg);
  }

  90% {
    transform: translateY(0rem) rotateY(0deg) rotateZ(0deg) rotateX(180deg);
  }

  to {
    transform: rotateX(0deg) translateY(0rem) rotateY(0deg) rotateZ(0deg);
  }
}

@keyframes bounce-2 {
  from {
    transform: rotateY(0deg) rotateZ(0deg) rotateX(0deg);
  }

  15% {
    transform: rotateY(360deg) translateY(-69rem) rotateZ(360deg) rotateX(180deg);
  }

  30% {
    transform: translateY(-30rem) rotateY(180deg) rotateZ(180deg) rotateX(270deg);
  }

  50% {
    transform: translateY(0rem) rotateY(0deg) rotateZ(0deg) rotateX(90deg);
  }

  90% {
    transform: translateY(0rem) rotateY(0deg) rotateZ(0deg) rotateX(90deg);
  }

  to {
    transform: rotateX(0deg) translateY(0rem) rotateY(0deg) rotateZ(0deg);
  }
}

@keyframes bounce-3 {
  from {
    transform: rotateY(0deg) rotateZ(0deg) rotateX(0deg);
  }

  15% {
    transform: rotateY(360deg) translateY(-69rem) rotateZ(360deg) rotateX(180deg);
  }

  30% {
    transform: translateY(-30rem) rotateY(180deg) rotateZ(180deg) rotateX(270deg);
  }

  50% {
    transform: translateY(0rem) rotateY(90deg) rotateZ(0deg) rotateX(0deg);
  }

  90% {
    transform: translateY(0rem) rotateY(90deg) rotateZ(0deg) rotateX(0deg);
  }

  to {
    transform: rotateX(0deg) translateY(0rem) rotateY(0deg) rotateZ(0deg);
  }
}

@keyframes bounce-4 {
  from {
    transform: rotateY(0deg) rotateZ(0deg) rotateX(0deg);
  }

  15% {
    transform: rotateY(360deg) translateY(-69rem) rotateZ(360deg) rotateX(180deg);
  }

  30% {
    transform: translateY(-30rem) rotateY(180deg) rotateZ(180deg) rotateX(270deg);
  }

  50% {
    transform: translateY(0rem) rotateY(0deg) rotateZ(0deg) rotateX(-90deg);
  }

  90% {
    transform: translateY(0rem) rotateY(0deg) rotateZ(0deg) rotateX(-90deg);
  }

  to {
    transform: rotateX(0deg) translateY(0rem) rotateY(0deg) rotateZ(0deg);
  }
}

@keyframes bounce-5 {
  from {
    transform: rotateY(0deg) rotateZ(0deg) rotateX(0deg);
  }

  15% {
    transform:  rotateY(360deg) translateY(-69rem) rotateZ(360deg) rotateX(180deg);
  }

  30% {
    transform: translateY(-30rem) rotateY(180deg) rotateZ(180deg) rotateX(270deg);
  }

  50% {
    transform: translateY(0rem) rotateY(-90deg) rotateZ(0deg) rotateX(0deg);
  }

  90% {
    transform: translateY(0rem) rotateY(-90deg) rotateZ(0deg) rotateX(0deg);
  }

  to {
    transform: rotateX(0deg) translateY(0rem) rotateY(0deg) rotateZ(0deg);
  }
}

@keyframes bounce-6 {
  from {
    transform: rotateY(0deg) rotateZ(0deg) rotateX(0deg);
  }

  15% {
    transform:  rotateY(360deg) translateY(-69rem) rotateZ(360deg) rotateX(180deg);
  }

  30% {
    transform: translateY(-30rem) rotateY(180deg) rotateZ(180deg) rotateX(270deg);
  }

  50% {
    transform: translateY(0rem) rotateY(0deg) rotateZ(0deg) rotateX(0deg);
  }

  90% {
    transform: translateY(0rem) rotateY(0deg) rotateZ(0deg) rotateX(0deg);
  }

  to {
    transform: rotateX(0deg) translateY(0rem) rotateY(0deg) rotateZ(0deg);
  }
}

/* MODAL */

.modal {
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: 50;
  display: none;
  height: 18rem;
  width: 20rem;
  --tw-translate-x: -50%;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 0.25rem;
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  --tw-drop-shadow: drop-shadow(0 25px 25px rgb(0 0 0 / 0.15));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.modal .modalTitle {
  display: flex;
  height: 3rem;
  width: 100%;
  align-items: center;
  justify-content: center;
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
  --tw-bg-opacity: 1;
  background-color: rgb(226 232 240 / var(--tw-bg-opacity));
  font-family: "Lato-Light";
}

.modal .playerInputName {
  margin: 0.75rem;
  padding: 0.75rem;
  font-family: "Lato-Light";
}

.modal .playerInputName:focus {
}

.modal input {
  position: relative;
  bottom: 0px;
  width: 83.333333%;
  border-radius: 0.25rem;
  border-width: 1px;
  font-family: "Lato-Thin";
}

.modal .modalButtons {
  display: flex;
  align-items: center;
  justify-content: center;
}

@media (min-width: 1024px) {
  .lg\:relative {
    position: relative;
  }
}
